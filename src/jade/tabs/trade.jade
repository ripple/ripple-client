section.col-xs-12.content(ng-controller="TradeCtrl")

  //- Disconnected

  group.disconnected(ng-hide="connected")
    p.literal(l10n) You have to be online to see this screen

  group.disconnected(ng-hide="!connected || loadState.offers")
    p.literal(l10n) Loading order book...

  //- Connected

  group(ng-show="connected && loadState.offers")
    .settings
      .row
        .col-sm-5.col-md-3.currency-config
          input.form-control.currency#currency_pair(
            name='currency_pair', type='text'
            rp-combobox="pairs_query", rp-combobox-select
            ng-model='order.currency_pair')
        .col-sm-7.col-md-9
          ul.issuers.inline(ng-hide='order.first_currency.is_native()')
            li.label(l10n) Base currency
            li.value {{order.first_currency | rpcurrency}}&ensp;
              span(
                rp-pretty-issuer="order.first_issuer"
                rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
            li: a(href=""
              ng-show='show_issuer_form != "first"'
              ng-click='edit_first_issuer()', l10n)
              | change issuer
            li: a(href=""
              ng-show='show_issuer_form == "first"'
              ng-click='show_issuer_form = false', l10n)
              | cancel
          ul.issuers.inline(ng-show='order.first_currency.is_native()')
            li.label(l10n) Base currency
            li.value XRP
          ul.issuers.inline(ng-hide='order.second_currency.is_native()')
            li.label(l10n) Counter currency
            li.value {{order.second_currency | rpcurrency}}&ensp;
              span(
                rp-pretty-issuer="order.second_issuer"
                rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
            li: a(href=""
              ng-show='show_issuer_form != "second"'
              ng-click='edit_second_issuer()', l10n)
              | change issuer
            li: a(href=""
              ng-show='show_issuer_form == "second"'
              ng-click='show_issuer_form = false', l10n)
              | cancel
          ul.issuers.inline(ng-show='order.second_currency.is_native()')
            li.label(l10n) Counter currency
            li.value XRP

    form.issuerSelector.first-issuer(name='first_issuer_form', ng-show='show_issuer_form == "first"')
      label(for='first_issuer', l10n) Base currency issuer ({{order.first_currency | rpcurrency}})
      .row
        .col-xs-12.col-sm-8.col-md-5
          input.form-control#first_issuer(
            name='first_issuer', type='text', rp-combobox="issuer_query"
            rp-combobox-value-as-ripple-name
            placeholder='Ripple name or contact'
            ng-model="order.first_issuer_edit_name"
            rp-dest, rp-dest-address, rp-dest-contact, rp-dest-ripple-name
            rp-dest-model="order.first_issuer_edit")
          .errorGroup(rp-errors='first_issuer')
            .error(rp-error-on='rpDest', l10n) Not a valid Ripple address or contact
        .col-xs-12.col-sm-4.col-md-2
          button.btn.btn-block.btn-success.submit(type='submit',
            ng-click='save_first_issuer()',
            ng-disabled="first_issuer_form.$invalid", l10n) Confirm

    form.issuerSelector.second-issuer(name='second_issuer_form', ng-show='show_issuer_form == "second"')
      label(for='second_issuer', l10n) Counter currency issuer ({{order.second_currency | rpcurrency}})
      .row
        .col-xs-12.col-sm-8.col-md-5
          input.form-control#second_issuer(
            name='second_issuer', type='text', rp-combobox="issuer_query"
            rp-combobox-value-as-ripple-name
            placeholder='Contact name or Ripple address'
            ng-model='order.second_issuer_edit_name'
            rp-dest, rp-dest-address, rp-dest-contact, rp-dest-ripple-name
            rp-dest-model="order.second_issuer_edit")
          .errorGroup(rp-errors='second_issuer')
            .error(rp-error-on='rpDest', l10n) Not a valid ripple address or contact
        .col-xs-12.col-sm-4.col-md-2
          button.btn.btn-block.btn-success.submit(type='submit',
            ng-click='save_second_issuer()',
            ng-disabled="second_issuer_form.$invalid", l10n) Confirm

    .message-select-issuer(ng-hide="order.valid_settings", l10n)
      | You must select an issuer to trade currencies.
      |  Click the “change issuer”, link above and enter your trusted
      |  gateway address or nickname.

    group(ng-if="order.valid_settings")
      ul.ticker
        .row
          li.col-xs-6.col-sm-3
            span(l10n) Bid
            span &#32&#61;&#32;
            span.value
              | {{book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span(l10n) Ask
            span &#32&#61;&#32;
            span.value
              | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span(l10n) Spread
            span &#32&#61;&#32;
            span.value
              | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamountsubtract:(book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays) | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span(l10n) Last price
            span &#32&#61;&#32;
            span.value
              | {{book.last_price | rpamount:{rel_precision: 5, rel_min_precision: 5} }}

      //- Show message if account has not been funded yet.
      .unfunded(ng-hide="account.Balance")
        p.literal(l10n) You have to be funded before you can trade

      //- 1. Order widgets
      group.row.send-widgets(ng-show="account.Balance")
        .col-xs-12.col-sm-6(ng-repeat="type in ['buy','sell']")
          .trade-widget(ng-switch="order[type].mode")
            .head
              span(ng-show="type == 'buy'", l10n) Buy&#32;
                span.issuer(
                  ng-hide="order.first_currency.is_native()"
                  rp-pretty-issuer="order.first_issuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
                |  {{order.first_currency | rpcurrency}}
              span(ng-show="type == 'sell'", l10n) Sell&#32;
                span.issuer(
                  ng-hide="order.first_currency.is_native()"
                  rp-pretty-issuer="order.first_issuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
                |  {{order.first_currency | rpcurrency}}
              span.available(ng-show="type == 'buy'", l10n)
                span.amount
                  span(ng-show="order.second_currency.is_native()")
                    | {{account.Balance | rpamount}} XRP
                  span(ng-hide="order.second_currency.is_native()")
                    | {{lines[order.second_issuer+order.second_currency.to_json()].balance || "0" | rpamount}}&#32;
                    span(
                      rp-pretty-issuer="order.second_issuer"
                      rp-pretty-issuer-contacts="userBlob.data.contacts"
                      rp-pretty-issuer-or-short)
                    |  {{order.second_currency | rpcurrency}}
                | available
              span.available(ng-show="type == 'sell'", l10n)
                span.amount
                  span(ng-show="order.first_currency.is_native()")
                    | {{account.Balance | rpamount}} XRP
                  span(ng-hide="order.first_currency.is_native()")
                    | {{lines[order.first_issuer+order.first_currency.to_json()].balance || "0" | rpamount}}&#32;
                    span(
                      rp-pretty-issuer="order.first_issuer"
                      rp-pretty-issuer-contacts="userBlob.data.contacts"
                      rp-pretty-issuer-or-short)
                    |  {{order.first_currency | rpcurrency}}
                | available
            div(ng-switch-when='trade')
              form.mode-form(name="tradeForm", ng-submit='place_order(type)', ng-show="order[type].showWidget")
                .row.order-values
                  .col-xs-12
                    .value-field
                      label(ng-show="type == 'buy'", l10n) Amount To Buy
                      label(ng-show="type == 'sell'", l10n) Amount To Sell
                      .input-group
                        input.form-control(name='amount', type='text'
                        ng-model='order[type].first', ng-change='calc_second(type)'
                        rp-amount
                        rp-amount-positive
                        rp-amount-xrp-limit
                        rp-amount-xrp-limit-currency="{{order.first_currency}}"
                        required)
                        .input-group-addon
                          | {{order.first_currency | rpcurrency}}
                          .issuer(
                            ng-hide="order.first_currency.is_native()"
                            rp-pretty-issuer="order.first_issuer"
                            rp-pretty-issuer-contacts="userBlob.data.contacts"
                            rp-pretty-issuer-or-short)
                      .errorGroup(rp-errors='amount')
                        .error(rp-error-on='required', l10n) Required
                        .error(rp-error-on='rpAmount', l10n) Not a valid amount.
                        .error(rp-error-on='rpAmountPositive', l10n)
                          | Must be greater than zero
                        .error(rp-error-on='rpAmountXrpLimit', l10n)
                          | Minimum is a drop (0.000001) and maximum is 100 billion XRPs
                  .col-xs-12
                    .value-field
                      label(l10n) Price of Each
                      .input-group
                        input.form-control(name='price', type='text'
                        ng-model='order[type].price', ng-change='calc_second(type)'
                        rp-amount
                        rp-amount-positive
                        rp-amount-xrp-limit
                        rp-amount-xrp-limit-currency="{{order.second_currency}}"
                        required)
                        .input-group-addon
                          | {{order.second_currency | rpcurrency}}
                          .issuer(
                            ng-hide="order.second_currency.is_native()"
                            rp-pretty-issuer="order.second_issuer"
                            rp-pretty-issuer-contacts="userBlob.data.contacts"
                            rp-pretty-issuer-or-short)
                      .errorGroup(rp-errors='price')
                        .error(rp-error-on='required', l10n) Required
                        .error(rp-error-on='rpAmount', l10n) Not a valid amount.
                        .error(rp-error-on='rpAmountPositive', l10n)
                          | Must be greater than zero
                        .error(rp-error-on='rpAmountXrpLimit', l10n)
                          | Minimum is a drop (0.000001) and maximum is 100 billion XRPs
                  .col-xs-12
                    .value-field
                      label(l10n) Order Value (max)
                      .input-group
                        input.form-control(name='value', type='text'
                        ng-model='order[type].second', ng-change='calc_first(type)'
                        rp-amount
                        rp-amount-positive
                        rp-amount-xrp-limit
                        rp-amount-xrp-limit-currency="{{order.second_currency}}"
                        required)
                        .input-group-addon
                          | {{order.second_currency | rpcurrency}}
                          .issuer(
                            ng-hide="order.second_currency.is_native()"
                            rp-pretty-issuer="order.second_issuer"
                            rp-pretty-issuer-contacts="userBlob.data.contacts"
                            rp-pretty-issuer-or-short)
                      .errorGroup(rp-errors='value')
                        .error(rp-error-on='required', l10n) Required
                        .error(rp-error-on='rpAmount', l10n) Not a valid amount.
                        .error(rp-error-on='rpAmountPositive', l10n)
                          | Must be greater than zero
                        .error(rp-error-on='rpAmountXrpLimit', l10n)
                          | Minimum is a drop (0.000001) and maximum is 100 billion XRPs
                .message
                  //- Having two very similar blocks just because of
                    translation related issues. (Cannot use the same format for
                    chinese translation)
                  p(ng-show="tradeForm.$valid && type == 'buy'", l10n) You are wanting to buy
                    span  {{order[type].first_amount | rpamount:{precision: 10} }} {{order[type].first_amount | rpcurrency}}
                    |  for
                    span  {{order[type].second_amount | rpamount:{precision: 10} }} {{order[type].second_amount | rpcurrency}}
                    |  (
                    span {{order[type].price_amount | rpamount:{precision: 10} }} {{order[type].second_amount | rpcurrency}}
                    |  per
                    span  {{order[type].first_amount | rpcurrency}}
                    | )
                  p(ng-show="tradeForm.$valid && type == 'sell'", l10n) You are wanting to sell
                    span  {{order[type].first_amount | rpamount:{precision: 10} }} {{order[type].first_amount | rpcurrency}}
                    |  for
                    span  {{order[type].second_amount | rpamount:{precision: 10} }} {{order[type].second_amount | rpcurrency}}
                    |  (
                    span {{order[type].price_amount | rpamount:{precision: 10} }} {{order[type].second_amount | rpcurrency}}
                    |  per
                    span  {{order[type].first_amount | rpcurrency}}
                    | )
                .row
                  .col-xs-6
                    button.btn.btn-success.btn-block.submit(type='submit', ng-disabled='tradeForm.$invalid')
                      span(ng-show="type == 'buy'", l10n)  Buy
                      span(ng-show="type == 'sell'", l10n)  Sell
                      |  {{order.first_currency | rpcurrency}}
                      span(ng-hide="order.first_currency.is_native()")  (
                        span.issuer(
                          rp-pretty-issuer="order.first_issuer"
                          rp-pretty-issuer-contacts="userBlob.data.contacts"
                          rp-pretty-issuer-or-short)
                        | )
              div(ng-hide="order[type].showWidget")
                p.literal(l10n) You do not have sufficient funds to create an order.

            //- 2. Confirmation
            form.mode-confirm(ng-switch-when='confirm', ng-submit="order_confirmed(type)")
              p.title.literal
                p.order-warning(ng-show="fatFingerErr === true", l10n) CAUTION: Your order is far off from the current market price.
                span(l10n) You are about to create an order to
                  span(ng-show="type == 'buy'", l10n-inc)  buy
                  span(ng-show="type == 'sell'", l10n-inc)  sell
                  .amount_feedback
                    span.value {{order[type].first_amount | rpamount}}&#32;
                    span.issuer(
                      ng-show="(order[type].first_amount | rpcurrency) !== 'XRP'"
                      rp-pretty-issuer="order[type].first_amount | rpissuer"
                      rp-pretty-issuer-contacts="userBlob.data.contacts"
                      rp-pretty-issuer-or-short)
                    span.currency  {{order[type].first_amount | rpcurrency}}
                  .literal(l10n-inc) for
                  .dest_feedback
                    span.value {{order[type].second_amount | rpamount}}&#32;
                    span.issuer(
                      ng-show="(order[type].second_amount | rpcurrency) !== 'XRP'"
                      rp-pretty-issuer="order[type].second_amount | rpissuer"
                      rp-pretty-issuer-contacts="userBlob.data.contacts"
                      rp-pretty-issuer-or-short)
                    span.currency  {{order[type].second_amount | rpcurrency}}
                  .rate_feedback (
                    span.rate {{order[type].price}}
                    span.pair {{order[type].first_amount | rpcurrency}}/{{order[type].second_amount | rpcurrency}}
                    | )
                  p.literal(l10n-inc) Are you sure?
                .row.row-padding-small
                  .col-xs-6.col-sm-offset-2.col-sm-4.col-md-offset-3.col-md-3
                    button.btn.btn-block.btn-default.back(type='button'
                      ng-click="order[type].mode = 'trade'", l10n) &laquo; Back
                  .col-xs-6.col-sm-4.col-md-3
                    button.btn.btn-block.btn-success.submit(type='submit'
                      ng-disabled='confirm_wait', l10n) Confirm

            //- 3. Sending

            group.mode-sending(ng-switch-when='sending')
              p.throbber.literal(l10n) Sending order to Ripple network...

            //- 4. Done

            group.mode-done(ng-switch-when='done')
              group.pending(ng-show='order[type].tx_result=="pending"')
                h2.tx-status(l10n) Your order has been submitted.
              group.result-success(ng-show='order[type].tx_result=="cleared"')
                h2.tx-status(l10n) Your order is now active!
              group.result-error(ng-show='order[type].tx_result=="error"')
                h2.tx-status(l10n) Request has been denied!
                p(l10n) We were unable to submit the request. Please try again later.
              group.result-malformed(ng-show='order[type].tx_result=="malformed"')
                h2.tx-status(l10n) Request is malformed!
                p(l10n) Your request is invalid, reason: {{order[type].engine_result}}
                  |  - {{order[type].engine_result_message}}
              group.result-malformed(ng-show='order[type].tx_result=="claim"')
                h2.tx-status(l10n) Transaction failed!
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-when="tecUNFUNDED_ORDER", l10n)
                    | You do not have enough {{(type == 'buy' ? order.second_currency : order.first_currency) | rpcurrency}} to create this order.
                  span(ng-switch-when="tecINSUF_RESERVE_OFFER", l10n)
                    | You must have at least {{account.reserve_to_add_trust | rpamount}} XRP to submit an order.&#32;
                    a(href="https://ripple.com/wiki/Reserves", target="_blank", l10n) More information.
                  span(ng-switch-default, l10n)
                    | Error: {{order[type].engine_result_message}}
              group.result-failed(ng-show='order[type].tx_result=="failed"')
                h2.tx-status(l10n) Trade failed!
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-default, l10n) Trade failed, reason: {{order[type].engine_result_message}}
              group.result-failed(ng-show='order[type].tx_result=="local"')
                h2.tx-status(l10n) Transaction failed!
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-when="telINSUF_FEE_P", l10n)
                    | The particular server you sent the transaction to was too busy to forward or process
                    |  your transaction at the fee you included in it.
              group.result-failed(ng-show='order[type].tx_result=="unknown"')
                h2.tx-status {{order[type].engine_result}}
                p(ng-switch on="order[type].engine_result")
                  span(ng-switch-default) {{order[type].engine_result_message}}
              hr
              .actionLink
                a(href="#trade", ng-click="reset_widget(type)", l10n) Submit another order

      h3(l10n) My Orders ({{offersCount}})
        small.toggle(ng-hide="isEmpty(offers)", ng-click="hideOffers = !hideOffers") {{hideOffers ? "show" : "hide"}}
      .listings.offers(ng-class="{show : !hideOffers}")
        .my
          div(ng-hide="isEmpty(offers)")
            .row.head.hidden-xs
              .col-sm-1.type(l10n) Type
              .col-sm-4(l10n) Currencies
                span.issuer(l10n-inc)  (Issuer)
              .col-sm-2.price(l10n) Price
              .col-sm-3.amount(l10n) Amount
              .col-sm-2.action(l10n) Action
          .row(ng-repeat="entry in offers", ng-class="{cancelling: cancelling}")
            .col-sm-1.type(data-label="Type") {{entry.type | rpucfirst}}
            .col-sm-4(data-label="Currencies")
              span {{entry.first | rpcurrency}}
              span.issuer(ng-show="entry.first.issuer().to_json()") &nbsp;(
                span(
                  rp-pretty-issuer="entry.first.issuer().to_json()"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
                | )
              span(ng-show="'buy' == entry.type", l10n)  with
              span(ng-show="'sell' == entry.type", l10n)  for
              span  {{entry.second | rpcurrency}}
              span.issuer(ng-show="entry.second.issuer().to_json()") &nbsp;(
                span(
                  rp-pretty-issuer="entry.second.issuer().to_json()"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
                | )
            .col-sm-2.price.rpamount(data-label="Price") {{entry.second | rpamountratio:entry.first | rpamount:{precision: 5, min_precision: 5} }}
              span.currency  {{entry.second | rpcurrency}}
            .col-sm-3.amount.rpamount(data-label="Amount") {{entry.first | rpamount}}
              span.currency  {{entry.first | rpcurrency}}
            .col-sm-2.action(rp-spinner="{{cancelling ? 4 : null}}")
              rp-confirm(
                l10n-action-text="Are you sure you want to cancel this order?"
                l10n-action-button-text="Cancel order"
                action-button-css="btn btn-default btn-danger"
                action-function="cancel_order()"
                cancel-button-css="btn btn-default"
                l10n-cancel-button-text="Keep order")
                a.danger(href="", l10n) Cancel
          .emptyMessage(ng-show="isEmpty(offers)")
            p.literal(l10n="You haven't placed any orders.") You haven&#39;t placed any orders.

      h3(l10n) Orderbook
        small.toggle(ng-click="hideOrderBook = !hideOrderBook") {{hideOrderBook ? "show" : "hide"}}
      .listings.orders(ng-class="{show : !hideOrderBook}")
        //- TODO hide one column (size/sum) to show bids/ask in the same line for mobile phones.
        //- TODO highlight changes
        .row.orderbook
          .bids.col-xs-12.col-sm-6
            .title(l10n) Bids
            .row.head(ng-show="book.bids.length")
              .col-xs-4.sum(l10n) Sum
                .currency {{book.bids[0].TakerPays | rpcurrency}}
                .issuer(
                  ng-show="(book.bids[0].TakerPays | rpcurrency) !== 'XRP'"
                  rp-pretty-issuer="book.bids[0].TakerPays | rpissuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
              .col-xs-4.size(l10n) Size
                .currency {{book.bids[0].TakerPays | rpcurrency}}
                .issuer(
                  ng-show="(book.bids[0].TakerPays | rpcurrency) !== 'XRP'"
                  rp-pretty-issuer="book.bids[0].TakerPays | rpissuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
              .col-xs-4.price(l10n) Bid Price
                .currency {{book.bids[0].TakerGets | rpcurrency}}
                .issuer(
                  ng-show="(book.bids[0].TakerGets | rpcurrency) !== 'XRP'"
                  rp-pretty-issuer="book.bids[0].TakerGets | rpissuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
            .row(ng-repeat='order in book.bids', ng-class="{my: order.my, cancelling: cancelling}", title="{{order.Account}}")
              .col-xs-4.rpamount.sum
                a(href=""
                  ng-click="fill_widget('sell',order,true)")
                  span(rp-bind-color-amount="order.showSum")
              .col-xs-4.rpamount.size(rp-bind-color-amount="order.showTakerPays")
              .col-xs-4.rpamount.price
                a(href="", ng-click="fill_widget('sell',order)")
                  span(rp-bind-color-amount="order.showPrice")
            .message(ng-show='!book.bids.length', l10n) There are currently no bids for this pair.
          .asks.col-xs-12.col-sm-6
            .title(l10n) Asks
            .row.head(ng-show="book.asks.length")
              .col-xs-4.price(l10n) Ask Price
                .currency {{book.asks[0].TakerPays | rpcurrency}}
                .issuer(
                  ng-show="(book.asks[0].TakerPays | rpcurrency) !== 'XRP'"
                  rp-pretty-issuer="book.asks[0].TakerPays | rpissuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
              .col-xs-4.size(l10n) Size
                .currency {{book.asks[0].TakerGets | rpcurrency}}
                .issuer(
                  ng-show="(book.asks[0].TakerGets | rpcurrency) !== 'XRP'"
                  rp-pretty-issuer="book.asks[0].TakerGets | rpissuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
              .col-xs-4.sum(l10n) Sum
                .currency {{book.asks[0].TakerGets | rpcurrency}}
                .issuer(
                  ng-show="(book.asks[0].TakerGets | rpcurrency) !== 'XRP'"
                  rp-pretty-issuer="book.asks[0].TakerGets | rpissuer"
                  rp-pretty-issuer-contacts="userBlob.data.contacts"
                  rp-pretty-issuer-or-short)
            .row(ng-repeat='order in book.asks', ng-class="{my: order.my, cancelling: cancelling}", title="{{order.Account}}")
              .col-xs-4.rpamount.price
                a(href="", ng-click="fill_widget('buy',order)")
                  span(rp-bind-color-amount="order.showPrice")
              .col-xs-4.rpamount.size(rp-bind-color-amount="order.showTakerGets")
              .col-xs-4.rpamount.sum
                a(href=""
                  ng-click="fill_widget('buy',order,true)")
                  span(rp-bind-color-amount="order.showSum")
            .message(ng-show='!book.asks.length', l10n) There are currently no asks for this pair.
